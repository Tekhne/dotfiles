snippet #f
	# FIXME
snippet #t
	# TODO
snippet def
	def ${1:name}(${2}):
	    ${3:pass}
snippet dem
	def ${1:name}(self${2}):
	    ${3:pass}
snippet ded
	def __${1:name}__(self${2}):
	    ${3:pass}
snippet dec
	@classmethod
	def ${1:name}(cls${2}):
	    ${3:pass}
snippet des
	@staticmethod
	def ${1:name}(${2}):
	    ${3:pass}
snippet cla
	class ${1:Name}(${2}):
	    ${3:pass}
snippet imp
	import ${1:module}
snippet fro
	from ${1:module} import ${2:name}
snippet try
	try:
	    ${1:pass}
snippet exc
	except ${1:Exception}:
	    ${2:pass}
snippet fin
	finally:
	    ${1:pass}
snippet ifm
	if __name__ == "__main__":
	    ${1:pass}
snippet if
	if ${1:expression}:
	    ${2:pass}
snippet ifn
	if not ${1:expression}:
	    ${2:pass}
snippet eli
	elif ${1:expression}:
	    ${2:pass}
snippet elin
	elif not ${1:expression}:
	    ${2:pass}
snippet els
	else:
	    ${1:pass}
snippet for
	for ${1:target} in ${2:expression}:
	    ${3:pass}
snippet whi
	while ${1:expression}:
	    ${2:pass}
snippet wit
	with ${1:expression}:
	    ${2:pass}
snippet lam
	lambda ${1:parameters}: ${2:expression}
snippet doc
	"""${1:text}"""
snippet to
	@tag("only") remove
snippet ass
	assert ${1:expression}
snippet pmf
	@pytest.mark.focus  # FIXME remove
