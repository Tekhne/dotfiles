snippet let
	let ${1:var} = ${2:expr};
snippet fn
	fn ${1:name}(${2})${3} {
	}
snippet if
	if ${1:condition} {
	}
snippet els
	else {
	}
snippet eli
	else if ${1:condition} {
	}
snippet loo
	loop {
	}
snippet whi
	while ${1:condition} {
	}
snippet for
	for ${1:collection} in ${2:iterator} {
	}
snippet use
	use ${1:library};
snippet mat
	match ${1:value} {
	}
snippet arm
	${1:pattern} => ${2:statement}
snippet ifl
	if let ${1:pattern} = ${2:expression} {
	}
snippet str
	struct ${1:Name} {
	}
snippet main
	fn main() {
	}
snippet atto outer attribute
	#[${1:meta}]
snippet atti inner attribute
	#![${1:meta}]
snippet imp
	impl ${1:Name} {
	}
snippet enu
	enum ${1:Name} {
	}
snippet mod
	mod ${1:name} {
	}
